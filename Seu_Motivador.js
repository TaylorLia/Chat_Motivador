// importando a biblioteca do 'Telegraph'
const { Telegraf } = require('telegraf')

// criando o objeto 'bot' e instanciando como um novo objeto da classe 'Telegraf'
const bot = new Telegraf(env.token)

// iniciando o bot
bot.start(ctx => {
  const from = ctx.update.message.from
  if (from.id != '1373064778' || '1351450134') {
    ctx.reply(
      `Desculpe-me ${from.first_name} ${from.last_name}. No momento s√≥ estou conversando com algumas pessoas selecionadas!!`
    )
  } else {
    (`Seja bem vindo ${from.first_name}! 
      Eu sou um 'Motivador' em treinamento!
      Tenho como objetivo fazer voc√™ pensar um pouco.
      Por enquanto eu:
 
        ‚ó¶ Eu respondo a Texto
        ‚ó¶ Eu respondo a Localiza√ß√£o 
        ‚ó¶ Eu respondo a Contato
        ‚ó¶ Eu respondo a Voz
        ‚ó¶ Eu respondo a Foto
        ‚ó¶ Eu respondo a Emogi
        ‚ó¶ Se falar = conversar
          Iniciaremos uma conversa
        ‚ó¶ Se mostrar esses emogis = 
          ü•§ üç∫ ‚òï
        ‚ó¶ Ap√≥s o conversar as palvras em negrito podem ser utilizadas
        ‚ó¶ /burguer/i Pode se tambem utiizar essa express√£o regular
        ‚ó¶ localiza√ß√£o o retorno de sua localiza√ß√£o
        
    `)
  }
})

// Tradando evento de texto iniciando a conversa 
bot.on('text', ctx => {
    const texto = ctx.update.message.text
    ctx.reply(`Nem todo mundo sempre estar√° disposto a escutar o que voc√™ fala: '${texto}',
        mas saiba que suas palavras s√£o muito importante para mim! Gostaria de conversar um pouco? Digite: conversar.
    `)
})

// tratando eventos de localiza√ß√£o	
bot.on('location', ctx => {
    const loc = ctx.update.message.location
    ctx.reply(`A localidade em que voc√™ se encontra sendo ela: 
            latitude: ${loc.latitude}
            longetude: ${loc.longitude}
            √© o local inicial para conquistar seu sonho!
        `)
})

//tratando eventos de contatos
bot.on('contact', ctx => {
    const cont = ctx.update.message.contact
    reply(`O que voce acha de tentar melhorar o dia de ${cont.first_name} tamb√©m?`)
})

// tratando eventos de audio
bot.on('voice', ctx => {
    const voz = ctx.update.message.voice
    console.log(voz)
    ctx.reply(`O audio tem ${voz.duration} segundos,
     mas percebe-se que cada vez mais somos presos a pequenos segundos mas sempre aproveite ao maximo fazer aquilo que gosta`)
})

bot.hears('conversar', ctx => {
  ctx.replyWithHTML(`
    Sobre o que gostaria de conversar?
    Receber uma frase <b> motivacional </b>
    Motivo de tantas duvidas <b> duvidas </b>
    Como vai o seu <b> dia </b>?
    Pequenas <b> coisas </b>
    <b> Persistencia </b>    
    `)
})

bot.hears('dia', ctx => {
  ctx.reply(`Sempre teremos um novo dia onde 
  desde o inicio temos a capacidade de ditar o rumo dos 
  acontecimentos pois tudo que lhe acontece s√≥ depende de s√≠ mesmo se almeja 
  algo grande, tendo um enorme objetivo, saiba que tudo se √© construido aos poucos ent√£o se persistir um dia estar√° onde quer chegar
    `)
})

bot.hears('duvidas', ctx => {
  ctx.reply(`O ser humano sempre √© acarretado de duvidas 
  mas √© isso que torna-o capacitado para resolve-la, quanto mais perguntas 
  tivermos maior ser√° nosso aprendizado e com isso nossa alegria, satisfa√ß√£o e conquista
    `)
})

bot.hears('motivacional', ctx => {
  ctx.reply(`Momentos bons e ruins sempre viram a acontecer basta lembrar 
  que assim como temos ep√≥cas dif√≠ceis sempre vir√° a seu momento bom assim como 
  a seguinte frase ap√≥s toda noite fria e escura sempre vir√° o amanhacer para trazer 
  o calor e a espera√ßa, tenha espera√ßa no amanhacer
    `)
})

bot.hears('Persistencia', ctx => {
  ctx.reply(`Saiba que sua persistencia sempre sera recompensada, muitas vezes o esfor√ßo que 
  dedica diariamente pode acabar n√£o mostrando resultado mas tenha consistencia naquilo que 
  faz que n√£o demorar√° muito para alcan√ßar o que almeja
    `)
})

bot.hears('coisas', ctx => {
  ctx.reply(`Muitas vezes as pequenas coisas que fazemos no nosso dia a dia tendem a ditar o ritmo
   tanto da sua semana como do seu propio m√™s, por isso n√£o se desvie de seu objetivo
    `)
})

// tratando eventos de de imagem/foto
bot.on(`photo`,
    ctx.replyWithPhoto({
    source: `${__dirname}/viagem.jpg`,
    caption: 'Adorei sua imagem mas gostaria de te mostrar isso tamb√©m, o que acha de tentar algo diferente? ou ir para um local diferente?' 
  
}))

// tratando eventos de tickers
bot.on(`sticker`, ctx =>{
    const stic = ctx.update.message.sticker
    ctx.reply(`Voc√™ enciou o ${stic.emoji}
    O que acha de selecionar alguns dos icones que mostrei l√° no inicio?
    `)
})

bot.hears('ü•§ Coca', async ctx => {
  await ctx.reply(`Refrigerante pode estar relacionado ao prazer momentaneo, mas ainda sim √© algo que sempre deve-se aproveitar viva sua propria caminhada!`)
  await ctx.reply(
    'Mais algum tipo de bebida?',
    Markup.keyboard(['‚òï Caf√© da manh√£', 'üç∫ Cerveja' , 'üèÖ Sair']).resize().oneTime()
  )
})

bot.hears('‚òï Caf√© da manh√£', async ctx => {
  await ctx.reply(`Saiba que o caf√© da manha √© a refei√ß√£o mais importante do dia aproveite cada momento de sua caminhada!`)
  await ctx.reply(
    'Mais algum tipo de bebida?',
    Markup.keyboard(['ü•§ Coca', 'üç∫ Cerveja', 'üèÖ Sair']).resize().oneTime()
  )
})

bot.hears('üç∫ Cerveja', async ctx => {
  await ctx.reply(`Pode ser relacionada ao esquecimento para n√£o lembra de um dia ruim, por mais que tenha problemas em sua caminhada n√£o desita, seja sempre melhor!`)
  await ctx.reply(
    'Mais algum tipo de bebida?',
    Markup.keyboard(['‚òï Caf√© da manh√£', 'ü•§ Coca' ,'üèÖ Sair']).resize().oneTime()
  )
})

bot.hears('üèÖ Sair', async ctx => {
  ctx.reply(`Saiba que sempre ser√° um vencedor bastando acreditar em si mesmo valorize as suas pequenas conquistas`)
})

bot.hears(/burguer/i, ctx => {
  ctx.reply('Hamburguer... X-Burguer... X-Salada, Tudo isso s√£o comidas que sempre acabam em algum momento passar por nossa cae√ßa e caso ache necessaria saiba que tudo bem aproveitar pois cada momento em que se vive com aquilo que lhe tras felicidade saiba que esse momento vale a pena!')
})

bot.hears('localiza√ß√£o', ctx => {
  ctx.replyWithLocation(latitude, longitude)
})

// iniciando o 'polling' com o servidor para verificar se h√° novas mensagens na conversa
bot.startPolling()